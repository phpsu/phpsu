on: [push, pull_request, release, workflow_dispatch]
name: Test
jobs:
  roave_bc_check:
    name: Roave BC Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: fetch tags
        run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
      - name: "Roave BC Check"
        uses: addnab/docker-run-action@v3
        with:
          image: "nyholm/roave-bc-check-ga"
          options: "--env GITHUB_REPOSITORY=${{ github.repository }} --user 1001 --volume ${{ github.workspace }}:/app"
          run: "/entrypoint.sh"

  test:
    runs-on: ubuntu-latest
    container:
      image: pluswerk/php-dev:nginx-${{ matrix.php }}
      options: -t
    strategy:
      fail-fast: false
      matrix:
        php: ['8.1', '8.2', '8.3', '8.4']
        symfony: ['5', '6', '7']
        exclude:
          - symfony: '7'
            php: '8.1'
    name: 'PHP ${{ matrix.php }} + Symfony: ${{ matrix.symfony }}'
    steps:
      - run: git config --global --add safe.directory /__w/phpsu/phpsu
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Cache dependenciess
        uses: actions/cache@v4
        with:
          path: ~/.composer/cache/files
          key: dependencies-php-${{ matrix.php }}-symfony-${{ matrix.symfony }}-composer-${{ hashFiles('composer.json') }}
      - run: composer req symfony/console:^${{ matrix.symfony }} symfony/process:^${{ matrix.symfony }}
      - run: vendor/bin/grumphp run
      - run: script -q -e -c "composer test"
      - run: script -q -e -c "composer infection"
      - uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./tests/test-results/coverage.xml

  docker:
    runs-on: ubuntu-latest
    steps:
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"
      -
        name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - uses: little-core-labs/get-git-tag@v3.0.2
        id: tag
      -
        name: Build (and push) to docker hub
        id: docker_build_latest
        uses: docker/build-push-action@v6
        with:
          push: ${{ startsWith(github.ref, 'refs/tags/') }}
          tags: phpsu/phpsu:latest,phpsu/phpsu:${{ steps.date.outputs.date }},phpsu/phpsu:${{ steps.tag.outputs.tag || '0' }},phpsu/phpsu:${{ steps.tag.outputs.tag || '0' }}-${{ steps.date.outputs.date }}
      -
        name: Image digest
        run: |
          echo ${{ steps.docker_build.outputs.digest }}
          echo ${{ steps.docker_build_dev.outputs.digest }}
